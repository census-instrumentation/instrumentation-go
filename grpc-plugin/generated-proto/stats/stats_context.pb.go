// Code generated by protoc-gen-go.
// source: github.com/google/instrumentation-proto/stats/stats_context.proto
// DO NOT EDIT!

package stats

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// StatsContext describes the encoding of stats context information (tags)
// for passing across RPC's.
type StatsContext struct {
	// Tags are encoded as a single byte sequence. The format is:
	// [tag_metadata key_len key_bytes value_len value_bytes]*
	//
	// Where:
	//  * tag_metadata is one byte and is for encoding metadata about the tag. The
	//    low 2 bits of this byte are used to encode the type of the value bytes.
	//    The high 6 bits are reserved for future use. The value_bytes type is
	//    encoded as:
	//    00 (value 0): string (UTF-8) encoding
	//    01 (value 1): integer (varint int64 encoding). See
	//      https://developers.google.com/protocol-buffers/docs/encoding#varints
	//      for documentation on the varint format.
	//    10 (value 2): boolean format. In this case value_len should equal 1, and
	//       the value_bytes will be a single byte containing either 0 (false) or
	//       1 (true).
	//    11 (value 3): Reserved for future use.
	//  * The key_len and value_len fields are represented using a varint, with a
	//    maximum value of 16383 bytes (this value is guaranteed to fit in at most
	//    2 bytes). Zero length keys or values are not allowed.
	//  * The value in key_bytes is a US-ASCII format string. Only the characters
	//    from 0x20 (' ') to 0x7e ('~') are valid.
	Tags []byte `protobuf:"bytes,1,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (m *StatsContext) Reset()                    { *m = StatsContext{} }
func (m *StatsContext) String() string            { return proto.CompactTextString(m) }
func (*StatsContext) ProtoMessage()               {}
func (*StatsContext) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *StatsContext) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*StatsContext)(nil), "google.instrumentation.StatsContext")
}

func init() {
	proto.RegisterFile("github.com/google/instrumentation-proto/stats/stats_context.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0x4c, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0xcf, 0xcc,
	0x2b, 0x2e, 0x29, 0x2a, 0xcd, 0x4d, 0xcd, 0x2b, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2d, 0x28,
	0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2e, 0x49, 0x2c, 0x29, 0x86, 0x90, 0xf1, 0xc9, 0xf9, 0x79, 0x25,
	0xa9, 0x15, 0x25, 0x7a, 0x60, 0x19, 0x21, 0x31, 0x88, 0x3e, 0x3d, 0x34, 0x7d, 0x4a, 0x4a, 0x5c,
	0x3c, 0xc1, 0x20, 0xe5, 0xce, 0x10, 0xd5, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0x89, 0xe9, 0xc5, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x60, 0xb6, 0x93, 0x13, 0x97, 0x5a, 0x72, 0x7e, 0xae, 0x1e,
	0x76, 0x13, 0xf4, 0xc0, 0xb6, 0x41, 0x6c, 0x71, 0x12, 0x44, 0x36, 0x2b, 0x00, 0x24, 0x14, 0xc5,
	0x0a, 0x96, 0x4f, 0x62, 0x03, 0x2b, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x44, 0x4e, 0xfa,
	0xe2, 0xcb, 0x00, 0x00, 0x00,
}
